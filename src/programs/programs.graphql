scalar JSON
scalar JSONObject

type Program {
  id: ID!
  title: String!
  versionId: ID
  version: String!
  courses: [Course!]
}

type Course {
  id: ID!
  title: String!
  units: [Unit!]
}

type Unit {
  id: ID!
  homeworks: [Homework!]
}

type Homework {
  id: ID!
}

input CreateProgramInput {
  name: String!
}

enum ProgramNodeType {
  PROGRAM
  COURSE
  UNIT
  HOMEWORK
}

enum UpdateProgramType {
  UpdateNode
  AddChild
  RemoveChild
  ReorderChildren
}

input UpdateProgramInputPayload {
  type: ProgramNodeType
  title: String
  content: JSON
  children: [ID!]
}

input UpdateProgramInput {
  programId: ID!
  targetId: ID!
  type: UpdateProgramType!
  payload: UpdateProgramInputPayload
}

input PublishProgramInput {
  programId: ID!
  label: String!
}

type Query {
  users: [User!]
  programs: [Program!]
}

type Query {
  programs: [Program]!
  program(id: ID!): Program
}

type Mutation {
  createProgram(createProgramInput: CreateProgramInput!): Program!
  updateProgram(updateProgramInput: UpdateProgramInput!): Program!
  publishProgram(publishProgramInput: PublishProgramInput!): Program!
  removeProgram(id: Int!): Program
}

type Subscription {
  programAdded: Program!
}
